name: Build and deploy üöÄ

on:
    push:
        branches:
            - main
            - develop
    workflow_dispatch:
        inputs:
            environment:
                description: 'Select environment'
                required: true
                default: 'test'
                type: choice
                options:
                    - prod
                    - test
                    - dev
            version_increment:
                description: 'Version increment type (only used for prod deployments)'
                required: false
                default: 'patch'
                type: choice
                options:
                    - patch
                    - minor
                    - major

permissions:
    contents: write
    id-token: write
    packages: read

jobs:
    check-skip-conditions:
        runs-on: [self-hosted, fremtind-default]
        if: github.event_name == 'push'
        outputs:
            should-skip: ${{ steps.check.outputs.should-skip }}
        steps:
            - name: Check if should skip build
              id: check
              run: |
                  COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
                  echo "Commit message: $COMMIT_MESSAGE"

                  if [[ "$COMMIT_MESSAGE" == *"Sync develop with main after production deployment"* ]]; then
                    echo "Skipping build - this is a sync commit from release afterparty"
                    echo "should-skip=true" >> $GITHUB_OUTPUT
                  else
                    echo "should-skip=false" >> $GITHUB_OUTPUT
                  fi

    validate-prod-deployment:
        runs-on: [self-hosted, fremtind-default]
        if: github.event.inputs.environment == 'prod' && github.ref != 'refs/heads/main'
        steps:
            - name: Fail prod deployment from non-main branch
              run: |
                  echo "‚ùå Production deployments are only allowed from the 'main' branch"
                  echo "Current branch: ${{ github.ref_name }}"
                  echo "Required branch: main"
                  exit 1

    build-and-deploy:
        runs-on: [self-hosted, fremtind-docker]
        needs: [check-skip-conditions]
        if: |
            always() && 
            (needs.check-skip-conditions.outputs.should-skip != 'true') &&
            (github.event.inputs.environment != 'prod' || github.ref == 'refs/heads/main')
        outputs:
            image-ref: ${{ steps.publish-image.outputs.uri }}
            pr-url: ${{ steps.update-image.outputs.pr-url }}
            environment: ${{ steps.determine-env.outputs.environment }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Determine environment
              id: determine-env
              uses: ./.github/actions/determine-environment
              with:
                  manual-environment: ${{ github.event.inputs.environment }}
                  branch: ${{ github.ref_name }}
                  event-name: ${{ github.event_name }}

            - name: Setup Node and PNPM
              uses: ./.github/actions/setup-node-pnpm

            - name: Build
              run: pnpm build

            - name: Log in to ECR
              id: login-ecr
              uses: fremtind/action-ecr-login@v1.0.0
              with:
                  aws_infra_account_gha_cognito_pool_id: '${{ vars.AWS_INFRA_ACCOUNT_GHA_COGNITO_POOL_ID }}'
                  aws_infra_accountid: '${{ vars.AWS_INFRA_ACCOUNTID}}'

            - name: Build Docker image
              id: build-image
              uses: ./.github/actions/build-docker
              with:
                  image-name: ${{ github.event.repository.name }}
                  image-tag: ${{ github.ref_name }}-${{ github.sha }}-${{ github.run_number }}-${{ github.run_attempt }}

            - name: Publish image to ECR
              id: publish-image
              uses: fremtind/action-ecr-publish@v3.0.0
              with:
                  registry: ${{ steps.login-ecr.outputs.registry }}
                  repository: app/${{ github.event.repository.name }}/${{ github.event.repository.name }}-ecr
                  local-image-name: ${{ steps.build-image.outputs.image-name }}
                  tag: ${{ steps.build-image.outputs.image-tag }}

            - name: Update image in app-configrepo
              id: update-image
              uses: fremtind/action-image-updater@v1
              with:
                  image-reference: ${{ steps.publish-image.outputs.uri }}
                  environment: ${{ steps.determine-env.outputs.environment }}

    summary:
        runs-on: [self-hosted, fremtind-default]
        needs: ['build-and-deploy', 'check-skip-conditions']
        if: |
            always() && 
            needs.build-and-deploy.result == 'success' && 
            needs.check-skip-conditions.outputs.should-skip != 'true'
        steps:
            - uses: actions/checkout@v4

            - name: Job summary
              uses: ./.github/actions/summary
              with:
                  image-ref: ${{ needs.build-and-deploy.outputs.image-ref }}
                  pr-url: ${{ needs.build-and-deploy.outputs.pr-url }}
                  environment: ${{ needs.build-and-deploy.outputs.environment }}

    summary-with-release:
        runs-on: [self-hosted, fremtind-default]
        needs: ['build-and-deploy', 'calculate-version', 'check-skip-conditions']
        if: |
            always() && 
            needs.build-and-deploy.result == 'success' && 
            needs.calculate-version.result == 'success' && 
            needs.check-skip-conditions.outputs.should-skip != 'true' &&
            ((github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event.inputs.environment == 'prod' && github.ref == 'refs/heads/main'))
        steps:
            - uses: actions/checkout@v4

            - name: Job summary with release info
              uses: ./.github/actions/summary
              with:
                  image-ref: ${{ needs.build-and-deploy.outputs.image-ref }}
                  new-version: ${{ needs.calculate-version.outputs.new-version }}
                  new-tag: ${{ needs.calculate-version.outputs.new-tag }}
                  previous-tag: ${{ needs.calculate-version.outputs.previous-tag }}
                  increment-type: ${{ needs.calculate-version.outputs.increment-type }}
                  pr-url: ${{ needs.build-and-deploy.outputs.pr-url }}
                  environment: ${{ needs.build-and-deploy.outputs.environment }}

    calculate-version:
        runs-on: [self-hosted, fremtind-default]
        needs: ['build-and-deploy', 'check-skip-conditions']
        if: |
            always() && 
            needs.build-and-deploy.result == 'success' && 
            needs.check-skip-conditions.outputs.should-skip != 'true' &&
            ((github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event.inputs.environment == 'prod' && github.ref == 'refs/heads/main'))
        outputs:
            new-version: ${{ steps.version.outputs.new-version }}
            new-tag: ${{ steps.version.outputs.new-tag }}
            previous-tag: ${{ steps.version.outputs.previous-tag }}
            increment-type: ${{ steps.version.outputs.increment-type }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Calculate semantic version
              id: version
              uses: ./.github/actions/calculate-version
              with:
                  # For automatic deployments (push to main): defaults to 'patch'
                  # For manual deployments: uses user-selected increment type
                  increment-type: ${{ github.event.inputs.version_increment || 'patch' }}

    create-release:
        runs-on: [ubuntu-latest]
        needs: ['build-and-deploy', 'calculate-version', 'check-skip-conditions']
        if: |
            always() && 
            needs.build-and-deploy.result == 'success' && 
            needs.calculate-version.result == 'success' && 
            needs.check-skip-conditions.outputs.should-skip != 'true' &&
            ((github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event.inputs.environment == 'prod' && github.ref == 'refs/heads/main'))
        permissions:
            contents: write
            id-token: write
        steps:
            - name: Authenticate with chore-bot
              uses: fremtind/action-chorebot-auth@v2
              id: token

            - name: Checkout
              uses: actions/checkout@v4

            - name: Create GitHub Release
              uses: ./.github/actions/create-release
              with:
                  tag: ${{ needs.calculate-version.outputs.new-tag }}
                  version: ${{ needs.calculate-version.outputs.new-version }}
                  previous-tag: ${{ needs.calculate-version.outputs.previous-tag }}
                  increment-type: ${{ needs.calculate-version.outputs.increment-type }}
                  image-ref: ${{ needs.build-and-deploy.outputs.image-ref }}
                  github-token: ${{ steps.token.outputs.token }}
                  pr-url: ${{ needs.build-and-deploy.outputs.pr-url }}
                  teams-webhook-url: ${{ secrets.TEAMS_RELEASE_WEBHOOK }}
