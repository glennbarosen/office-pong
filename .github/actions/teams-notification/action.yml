name: Send Teams notification
description: Send a release notification to Microsoft Teams
inputs:
    webhook-url:
        description: 'Teams webhook URL'
        required: true
    app-name:
        description: 'Application name'
        required: true
    version:
        description: 'Release version'
        required: true
    pr-url:
        description: 'URL of the pull request in app-configrepo'
        required: false
    release-url:
        description: 'URL of the GitHub release'
        required: true
    message:
        description: 'Custom message for the notification'
        required: true

runs:
    using: 'composite'
    steps:
        - name: Create Teams notification payload
          shell: bash
          run: |
              # Create base payload
              cat > /tmp/teams_payload.json << 'EOF'
              {
                "type": "message",
                "attachments": [
                  {
                    "contentType": "application/vnd.microsoft.card.adaptive",
                    "content": {
                      "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                      "type": "AdaptiveCard",
                      "version": "1.5",
                      "body": [
                        {
                          "type": "TextBlock",
                          "size": "Large",
                          "weight": "Bolder",
                          "text": "Release ${{ inputs.version }}",
                          "style": "heading",
                          "wrap": true
                        },
                        {
                          "type": "TextBlock",
                          "text": "${{ inputs.message }}",
                          "wrap": true
                        }
                      ],
                      "actions": [
                        {
                          "type": "Action.OpenUrl",
                          "title": "Release notes",
                          "url": "${{ inputs.release-url }}",
                          "role": "button"
                        }
                      ]
                    }
                  }
                ]
              }
              EOF

              # Add PR URL action if provided
              if [ -n "${{ inputs.pr-url }}" ]; then
                jq '.attachments[0].content.actions = [
                  {
                    "type": "Action.OpenUrl",
                    "title": "Pull request i app-configrepo",
                    "url": "${{ inputs.pr-url }}",
                    "role": "button",
                    "style": "positive"
                  }
                ] + .attachments[0].content.actions' /tmp/teams_payload.json > /tmp/teams_payload_updated.json
                mv /tmp/teams_payload_updated.json /tmp/teams_payload.json
              fi

        - name: Send Teams notification
          shell: bash
          run: |
              # Send notification with error handling
              if curl -X POST \
                '${{ inputs.webhook-url }}' \
                -H "Content-Type: application/json" \
                -H "User-Agent: GitHub-Actions" \
                --connect-timeout 30 \
                --max-time 60 \
                --silent \
                --fail-with-body \
                -d @/tmp/teams_payload.json; then
                echo "Teams notification sent successfully"
              else
                echo "Teams notification failed. Continuing with release process."
                exit 0  # Don't fail the entire workflow for notification issues
              fi
