/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IkkeAutorisertImport } from './routes/ikke-autorisert'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthOpprettImport } from './routes/_auth/opprett'
import { Route as AuthArkivImport } from './routes/_auth/arkiv'
import { Route as AuthEndreIdImport } from './routes/_auth/endre.$id'

// Create/Update Routes

const IkkeAutorisertRoute = IkkeAutorisertImport.update({
  id: '/ikke-autorisert',
  path: '/ikke-autorisert',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthOpprettRoute = AuthOpprettImport.update({
  id: '/opprett',
  path: '/opprett',
  getParentRoute: () => AuthRoute,
} as any)

const AuthArkivRoute = AuthArkivImport.update({
  id: '/arkiv',
  path: '/arkiv',
  getParentRoute: () => AuthRoute,
} as any)

const AuthEndreIdRoute = AuthEndreIdImport.update({
  id: '/endre/$id',
  path: '/endre/$id',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/ikke-autorisert': {
      id: '/ikke-autorisert'
      path: '/ikke-autorisert'
      fullPath: '/ikke-autorisert'
      preLoaderRoute: typeof IkkeAutorisertImport
      parentRoute: typeof rootRoute
    }
    '/_auth/arkiv': {
      id: '/_auth/arkiv'
      path: '/arkiv'
      fullPath: '/arkiv'
      preLoaderRoute: typeof AuthArkivImport
      parentRoute: typeof AuthImport
    }
    '/_auth/opprett': {
      id: '/_auth/opprett'
      path: '/opprett'
      fullPath: '/opprett'
      preLoaderRoute: typeof AuthOpprettImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/endre/$id': {
      id: '/_auth/endre/$id'
      path: '/endre/$id'
      fullPath: '/endre/$id'
      preLoaderRoute: typeof AuthEndreIdImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthArkivRoute: typeof AuthArkivRoute
  AuthOpprettRoute: typeof AuthOpprettRoute
  AuthIndexRoute: typeof AuthIndexRoute
  AuthEndreIdRoute: typeof AuthEndreIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthArkivRoute: AuthArkivRoute,
  AuthOpprettRoute: AuthOpprettRoute,
  AuthIndexRoute: AuthIndexRoute,
  AuthEndreIdRoute: AuthEndreIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/ikke-autorisert': typeof IkkeAutorisertRoute
  '/arkiv': typeof AuthArkivRoute
  '/opprett': typeof AuthOpprettRoute
  '/': typeof AuthIndexRoute
  '/endre/$id': typeof AuthEndreIdRoute
}

export interface FileRoutesByTo {
  '/ikke-autorisert': typeof IkkeAutorisertRoute
  '/arkiv': typeof AuthArkivRoute
  '/opprett': typeof AuthOpprettRoute
  '/': typeof AuthIndexRoute
  '/endre/$id': typeof AuthEndreIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/ikke-autorisert': typeof IkkeAutorisertRoute
  '/_auth/arkiv': typeof AuthArkivRoute
  '/_auth/opprett': typeof AuthOpprettRoute
  '/_auth/': typeof AuthIndexRoute
  '/_auth/endre/$id': typeof AuthEndreIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/ikke-autorisert'
    | '/arkiv'
    | '/opprett'
    | '/'
    | '/endre/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/ikke-autorisert' | '/arkiv' | '/opprett' | '/' | '/endre/$id'
  id:
    | '__root__'
    | '/_auth'
    | '/ikke-autorisert'
    | '/_auth/arkiv'
    | '/_auth/opprett'
    | '/_auth/'
    | '/_auth/endre/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  IkkeAutorisertRoute: typeof IkkeAutorisertRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  IkkeAutorisertRoute: IkkeAutorisertRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/ikke-autorisert"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/arkiv",
        "/_auth/opprett",
        "/_auth/",
        "/_auth/endre/$id"
      ]
    },
    "/ikke-autorisert": {
      "filePath": "ikke-autorisert.tsx"
    },
    "/_auth/arkiv": {
      "filePath": "_auth/arkiv.tsx",
      "parent": "/_auth"
    },
    "/_auth/opprett": {
      "filePath": "_auth/opprett.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/endre/$id": {
      "filePath": "_auth/endre.$id.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
